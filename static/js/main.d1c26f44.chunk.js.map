{"version":3,"sources":["components/StateList/StateList.jsx","components/Profile/Profile.jsx","components/StatisticItem/StatisticItem.jsx","components/Statistics/Statistics.jsx","components/FriendItem/FriendItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionItem.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","stats","display","margin","padding","justifyContent","listStyle","backgroundColor","stats__stats","flexDirection","marginRight","StateList","followers","views","likes","stylesProfile","className","label","profile","width","description","alignItems","avatar","borderRadius","tag","color","location","Profile","name","CardActionArea","Card","src","alt","colors","useStyle","item","StatisticItem","stat","percentage","idx","classes","style","title","Statistics","statList","statistics","map","id","itemFriend","marginLeft","status","online","push","join","FriendItem","friend","isOnline","FriendList","friendList","protoType","PropTypes","arrayOf","shape","number","isRequired","cell","classTable","TransactionItem","transation","type","amount","currency","tablet","TransactionHistory","transations","App","user","statisticalData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1c26f44.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  stats: {\r\n    display: 'flex',\r\n    margin: 0,\r\n    padding: 0,\r\n    justifyContent: 'center',\r\n    listStyle: 'none',\r\n    backgroundColor: '#6f6df7',\r\n  },\r\n  stats__stats: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginRight: 10,\r\n    '&:last-child': { marginRight: 0 },\r\n  },\r\n});\r\n\r\nconst StateList = ({ followers, views, likes }) => {\r\n  const stylesProfile = useStyles();\r\n  return (\r\n    <ul className={stylesProfile.stats}>\r\n      <li className={stylesProfile.stats__stats}>\r\n        <span className={stylesProfile.label}>Followers</span>\r\n        <span className=\"quantity\">{followers}</span>\r\n      </li>\r\n      <li className={stylesProfile.stats__stats}>\r\n        <span className={stylesProfile.label}>Views</span>\r\n        <span className=\"quantity\">{views}</span>\r\n      </li>\r\n      <li className={stylesProfile.stats__stats}>\r\n        <span className={stylesProfile.label}>Likes</span>\r\n        <span className=\"quantity\">{likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStateList.propTypes = {\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StateList;\r\n","import PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport StateList from \"../StateList/StateList\";\r\n\r\nconst useStyles = createUseStyles({\r\n  profile: {\r\n    width: \"200px\",\r\n  },\r\n\r\n  description: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#6f6df7\",\r\n  },\r\n\r\n  label: { display: \"block\" },\r\n\r\n  avatar: { display: \"block\", width: \"100%\", borderRadius: \"50%\" },\r\n\r\n  tag: {\r\n    margin: 0,\r\n    color: \"#ccc8c8\",\r\n  },\r\n\r\n  location: {\r\n    color: \"#ccc8c8\",\r\n  },\r\n});\r\n\r\nconst Profile = ({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) => {\r\n  const stylesProfile = useStyles();\r\n\r\n  return (\r\n    <div className={stylesProfile.profile}>\r\n      <CardActionArea>\r\n        <Card>\r\n          <div className={stylesProfile.description}>\r\n            <img\r\n              src={avatar}\r\n              alt=\"Аватар пользователя\"\r\n              className={stylesProfile.avatar}\r\n            />\r\n            <p className=\"name\">\r\n              <b>{name}</b>\r\n            </p>\r\n            <p className={stylesProfile.tag}>@{tag}</p>\r\n            <p className={stylesProfile.location}>{location}</p>\r\n          </div>\r\n          <StateList followers={followers} views={views} likes={likes} />\r\n        </Card>\r\n      </CardActionArea>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst colors = [\"#2196F3\", \"#4CAF50\", \"#FF9800\", \"#009688\", \"#795548\"];\r\n\r\nconst useStyle = createUseStyles({\r\n  item: {\r\n    padding: 5,\r\n    \"&:last-child\": { marginRight: 0 },\r\n  },\r\n\r\n  label: { display: \"block\" },\r\n});\r\n\r\nconst StatisticItem = ({ stat: { label, percentage }, idx }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      <li\r\n        className={classes.item}\r\n        style={{\r\n          backgroundColor: colors[idx],\r\n        }}\r\n      >\r\n        <span className={classes.label}>{label}</span>\r\n        <span className=\"percentage\">{percentage}%</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nStatisticItem.propTypes = {\r\n  idx: PropTypes.number.isRequired,\r\n  stat: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }),\r\n};\r\nexport default StatisticItem;\r\n","import StatisticItem from \"../StatisticItem/StatisticItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyle = createUseStyles({\r\n  \"stat-list\": {\r\n    display: \"flex\",\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n\r\n  title: { display: \"flex\", justifyContent: \"center\" },\r\n});\r\n\r\nconst Statistics = ({ statList, title }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <section className={classes.statistics}>\r\n      {title && <h2 className={classes.title}>{title}</h2>}\r\n      <ul className={classes[\"stat-list\"]}>\r\n        {statList.map((stat, idx) => (\r\n          <StatisticItem stat={stat} idx={idx} key={stat.id} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  statList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Friend.scss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  itemFriend: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  avatar: {\r\n    width: 50,\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nconst status = (online) => {\r\n  const status = [\"status\"];\r\n  if (online) {\r\n    status.push(\"isOnline\");\r\n    return status.join(\" \");\r\n  } else {\r\n    status.push(\"isOffline\");\r\n    return status.join(\" \");\r\n  }\r\n};\r\n\r\nconst FriendItem = ({ friend: { isOnline, avatar, name } }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <li className={classes.itemFriend}>\r\n        <p className={status(isOnline)}> </p>\r\n        <img className={classes.avatar} src={avatar} alt={name} />\r\n        <span>{name}</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nFriendItem.propTypes = {\r\n  friend: PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n  }),\r\n};\r\nexport default FriendItem;\r\n","import FriendItem from \"../FriendItem/FriendItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friendList }) => {\r\n  return (\r\n    <section className=\"section\">\r\n      <ul className=\"friendList\">\r\n        {friendList.map((friend) => (\r\n          <FriendItem friend={friend} key={friend.id} />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nFriendList.protoType = {\r\n  friendList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = createUseStyles({\r\n  cell: {\r\n    padding: [10, 30, 10, 30],\r\n  },\r\n});\r\n\r\nconst classTable = (idx) => {\r\n  const classTable = idx % 2 ? \"white\" : \"black\";\r\n  return classTable;\r\n};\r\n\r\nconst TransactionItem = ({ transation: { type, amount, currency }, idx }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <tr className={classTable(idx)}>\r\n      <td className={classes.cell}>{type}</td>\r\n      <td className={classes.cell}>{amount}</td>\r\n      <td className={classes.cell}>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionItem.propTypes = {\r\n  idx: PropTypes.number.isRequired,\r\n  transation: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }),\r\n};\r\nexport default TransactionItem;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport PropTypes from \"prop-types\";\r\nimport TransactionItem from \"./TransactionItem\";\r\nimport \"./History.scss\";\r\n\r\nconst useStyle = createUseStyles({\r\n  tablet: {\r\n    backgroundColor: \"#30d5c8\",\r\n    color: \"white\",\r\n  },\r\n});\r\n\r\nconst TransactionHistory = ({ transations }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <table className=\"transaction-history\">\r\n      <thead>\r\n        <tr className={classes.tablet}>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transations.map((transation, idx) => (\r\n          <TransactionItem\r\n            key={transation.id}\r\n            transation={transation}\r\n            idx={idx}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  transations: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from \"./components/Profile/Profile\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport FriendList from \"./components/FriendList/FriendList\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\nimport user from \"./json/user.json\";\r\nimport statisticalData from \"./json/statistical-data.json\";\r\nimport friendList from \"./json/friendList.json\";\r\nimport transations from \"./json/transations.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <section className=\"account\">\r\n        <Profile\r\n          name={user.name}\r\n          avatar={user.avatar}\r\n          tag={user.tag}\r\n          location={user.location}\r\n          stats={user.stats}\r\n        />\r\n        <Statistics statList={statisticalData} title=\"Upload stats\" />\r\n        <FriendList friendList={friendList} />\r\n      </section>\r\n      <section className=\"content\">\r\n        <TransactionHistory transations={transations} />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}